body {
	font-family: 'Quicksand', sans-serif;
	color: rgb(75,200,75);
	font-weight: 300;
}


img, 
embed, 
object, 
video {
	max-width: 100%;
}


div, 
span {
	max-width: 100%;
}


button,
link {
	min-width: 48px;
	min-height: 48px;
}


.container {
	background-color: rgb(100,100,100);
}


.row {
	padding-left: 10px;
	padding-right: 10px;
	margin-left: 10px;
	margin-right: 10px;
}


.nav {
	text-align: center;
	color: rgb(0,0,255);
	font-weight: bold;
}


.col-centered {
	display: inline-block;
	float: none;
	text-align: center;
	margin-right: -4px;
}


.text-muted {
	color: rgb(50,150,50);
}


.text-thin {
	font-weight: 100;
}


.title-super {
	font-size: 2.0em;
} 


.title-logo {
	margin-top: 20px;
	border-radius: 40%;
}


.line-divider {
	margin: auto;
}


footer {
	color: rgb(255,30,80);
	text-align: left;
	font-weight: bold;
}





/*
style rules brief:
o. remembering the specificity cascade, it is best to style elements
from the "widest" (<body>) to the narrowest (<p>); this adheres to the 
logic of selecting page-wide styles before the div-wide styles, as you
would select the type of frosting on a cake before the sprinkles (?).  
Additionally, code further down the page takes precedence over code near 
the top, assuming equal specificity (tag<class<id)

a. avoid use of element selectors (usually unnecessary) as well as ID 
selectors (con-straining W.R.T. styling options), and avoid qualifying class 
names with type (<p>)selectors.

b. use descriptive rather than semantically
opaque or confusing class names, and avoid
overlap/confusion with HTML element names
c. use short-hand...font-family, font-size
and line-height, specificied 1 row at a time,
can be condensed into:; {font: value, value, 
value;}. Note that EVERY value must be specified
or entire FONT statement will be ignored
d. use hyphen rather than underscore to separate
two_worded class names like-so
*/